#!/usr/bin/env perl
use strict;
use warnings;
use YAML::Syck 'LoadFile';

@ARGV = glob("log/requests/*.log") if @ARGV == 0;
die "No files to analyze" if @ARGV == 0;

my @hits;
my @deaths;

for my $logfile (@ARGV) {
    my @entries = LoadFile($logfile);
    for (my $i = 1; $i < @entries; ++$i) {
        if (!defined($entries[$i]{memory})) {
            # died during request
            push @deaths, $entries[$i]{ENV}{PATH_INFO};
            next;
        }

        my $delta_memory = $entries[$i]{memory} - $entries[$i-1]{memory};
        my $path = $entries[$i]{ENV}{PATH_INFO};
        my $took = $entries[$i]{took};
        push @hits, [$delta_memory, $path, $took] if $delta_memory != 0;
    }
}

for my $hit (sort { $b->[0] <=> $a->[0] } @hits) {
    my $human_readable = sub {
        my $bytes = abs(shift);
        return $bytes if $bytes < 1024;
        return int($bytes / 1024)    . 'KB' if $bytes < 1024 ** 2;
        return int($bytes / 1024**2) . 'MB' if $bytes < 1024 ** 3;
        return int($bytes / 1024**3) . 'GB';
    }->($hit->[0]);

    $human_readable = ($hit->[0] > 0 ? '+' : '-')
                    . $human_readable;

    print "$hit->[1]: $human_readable, took $hit->[2]\n";
}

if (@deaths) {
    print "I died while processing the following URLs:\n";
    for my $death (@deaths) {
        print "$death\n";
    }
}

